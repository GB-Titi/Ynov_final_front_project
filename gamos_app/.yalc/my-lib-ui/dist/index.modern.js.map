{"version":3,"file":"index.modern.js","sources":["../src/components/RadioButtonComponent.tsx","../src/components/LinkButtonComponent.tsx","../src/components/ButtonComponent.tsx","../src/components/InputComponent.tsx","../src/components/SelectCountryComponent.tsx","../src/components/CheckboxComponent.tsx"],"sourcesContent":["import React from 'react';\r\n\r\ntype RadioButtonComponentProps = {\r\n    span?: string;\r\n};\r\nconst RadioButtonComponent: React.FC<RadioButtonComponentProps> = ({ span }) => {\r\n\r\n    return (\r\n        <label className='radio'>\r\n            <input name=\"radio\" type=\"radio\"/>\r\n            <span>{span}</span>\r\n        </label>\r\n    )\r\n}\r\nexport default RadioButtonComponent;","import React from 'react';\r\nimport Link from 'next/link'\r\n\r\ntype LinkButtonComponentProps = {\r\n    href: string;\r\n    text?: string;\r\n};\r\nconst LinkButtonComponent: React.FC<LinkButtonComponentProps> = ({ href, text }) => {\r\n\r\n    return (\r\n        // <Link href={href}>{span}</Link>\r\n        <Link href={href} className='link_button'>{text}</Link>\r\n    )\r\n}\r\nexport default LinkButtonComponent;","import React from 'react';\r\n// import Link from 'next/link'\r\n\r\ntype ButtonComponentProps = {\r\n    text?: string;\r\n};\r\nconst ButtonComponent: React.FC<ButtonComponentProps> = ({ text }) => {\r\n\r\n    return (\r\n        // <Link href={href}>{span}</Link>\r\n        <button className='link_button'>{text}</button>\r\n    )\r\n}\r\nexport default ButtonComponent;","import React from 'react';\r\n// import Link from 'next/link'\r\n\r\ntype InputComponentProps = {\r\n    placeholder: string;\r\n    type: string\r\n};\r\nconst InputComponent: React.FC<InputComponentProps> = ({ placeholder, type }) => {\r\n\r\n    return (\r\n        <label className='input-label'>\r\n            <span>{placeholder}</span>\r\n            <input type={type}/>\r\n            <div className='border'></div>\r\n        </label>\r\n    )\r\n}\r\nexport default InputComponent;","import React, { useState } from 'react'\r\nimport countries from \"i18n-iso-countries\";\r\n// Import the languages you want to use\r\n\r\n\r\nconst SelectCountryComponent = () => {\r\n    countries.registerLocale(require(\"i18n-iso-countries/langs/en.json\"));\r\n    countries.registerLocale(require(\"i18n-iso-countries/langs/fr.json\"));\r\n\r\n    const [selectedCountry, setSelectedCountry] = useState(\"\");\r\n    const selectCountryHandler = (value: any) => setSelectedCountry(value);\r\n\r\n    const countryObj = countries.getNames(\"fr\", { select: \"official\" });\r\n\r\n    const countryArr = Object.entries(countryObj).map(([key, value]) => {\r\n        return {\r\n            label: value,\r\n            value: key\r\n        };\r\n    });\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <select name=\"country-select\" id=\"country-select\" className='select'\r\n            onChange={e => { selectCountryHandler(e.target.value) }}>\r\n            {!!countryArr?.length &&\r\n                countryArr.map(({ label, value }) => (\r\n                    <option key={value} value={selectedCountry}>\r\n                        {label}\r\n                    </option>\r\n                ))}\r\n        </select>\r\n\r\n    )\r\n}\r\nexport default SelectCountryComponent;","import React from 'react';\r\n// import Link from 'next/link'\r\n\r\ntype CheckboxComponentProps = {\r\n    text: string;\r\n};\r\nconst CheckboxComponent: React.FC<CheckboxComponentProps> = ({ text }) => {\r\n\r\n    return (\r\n        // <Link href={href}>{span}</Link>\r\n        <label className=\"checkbox\">\r\n            <input name=\"check\" type=\"checkbox\" />\r\n            <span>{text}</span>\r\n        </label>\r\n    )\r\n}\r\nexport default CheckboxComponent;"],"names":["RadioButtonComponent","span","React","className","name","type","LinkButtonComponent","href","text","Link","ButtonComponent","InputComponent","placeholder","SelectCountryComponent","countries","registerLocale","require","useState","selectedCountry","setSelectedCountry","selectCountryHandler","value","countryObj","getNames","select","countryArr","Object","entries","map","key","label","id","onChange","e","target","length","CheckboxComponent"],"mappings":";;;;AAKA,IAAMA,oBAAoB,GAAwC,SAA5DA,oBAAoB;MAA2CC,IAAI,QAAJA,IAAI;EAErE,OACIC;IAAOC,SAAS,EAAC;KACbD;IAAOE,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC;IAAS,EAClCH,kCAAOD,IAAI,CAAQ,CACf;AAEhB,CAAC;;ACND,IAAMK,mBAAmB,GAAuC,SAA1DA,mBAAmB;MAA0CC,IAAI,QAAJA,IAAI;IAAEC,IAAI,QAAJA,IAAI;EAEzE,OAEIN,oBAACO,IAAI;IAACF,IAAI,EAAEA,IAAI;IAAEJ,SAAS,EAAC;KAAeK,IAAI,CAAQ;AAE/D,CAAC;;ACPD,IAAME,eAAe,GAAmC,SAAlDA,eAAe;MAAsCF,IAAI,QAAJA,IAAI;EAE3D,OAEIN;IAAQC,SAAS,EAAC;KAAeK,IAAI,CAAU;AAEvD,CAAC;;ACLD,IAAMG,cAAc,GAAkC,SAAhDA,cAAc;MAAqCC,WAAW,QAAXA,WAAW;IAAEP,IAAI,QAAJA,IAAI;EAEtE,OACIH;IAAOC,SAAS,EAAC;KACbD,kCAAOU,WAAW,CAAQ,EAC1BV;IAAOG,IAAI,EAAEA;IAAO,EACpBH;IAAKC,SAAS,EAAC;IAAe,CAC1B;AAEhB,CAAC;;ACXD,IAAMU,sBAAsB,GAAG,SAAzBA,sBAAsB;EACxBC,SAAS,CAACC,cAAc,CAACC,OAAO,CAAC,kCAAkC,CAAC,CAAC;EACrEF,SAAS,CAACC,cAAc,CAACC,OAAO,CAAC,kCAAkC,CAAC,CAAC;EAErE,gBAA8CC,QAAQ,CAAC,EAAE,CAAC;IAAnDC,eAAe;IAAEC,kBAAkB;EAC1C,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAoB,CAAIC,KAAU;IAAA,OAAKF,kBAAkB,CAACE,KAAK,CAAC;;EAEtE,IAAMC,UAAU,GAAGR,SAAS,CAACS,QAAQ,CAAC,IAAI,EAAE;IAAEC,MAAM,EAAE;GAAY,CAAC;EAEnE,IAAMC,UAAU,GAAGC,MAAM,CAACC,OAAO,CAACL,UAAU,CAAC,CAACM,GAAG,CAAC;QAAEC,GAAG;MAAER,KAAK;IAC1D,OAAO;MACHS,KAAK,EAAET,KAAK;MACZA,KAAK,EAAEQ;KACV;GACJ,CAAC;EAKF,OAEI3B;IAAQE,IAAI,EAAC,gBAAgB;IAAC2B,EAAE,EAAC,gBAAgB;IAAC5B,SAAS,EAAC,QAAQ;IAChE6B,QAAQ,EAAE,kBAAAC,CAAC;MAAMb,oBAAoB,CAACa,CAAC,CAACC,MAAM,CAACb,KAAK,CAAC;;KACpD,CAAC,EAACI,UAAU,aAAVA,UAAU,eAAVA,UAAU,CAAEU,MAAM,KACjBV,UAAU,CAACG,GAAG,CAAC;IAAA,IAAGE,KAAK,SAALA,KAAK;MAAET,KAAK,SAALA,KAAK;IAAA,OAC1BnB;MAAQ2B,GAAG,EAAER,KAAK;MAAEA,KAAK,EAAEH;OACtBY,KAAK,CACD;GACZ,CAAC,CACD;AAGjB,CAAC;;AC/BD,IAAMM,iBAAiB,GAAqC,SAAtDA,iBAAiB;MAAwC5B,IAAI,QAAJA,IAAI;EAE/D,OAEIN;IAAOC,SAAS,EAAC;KACbD;IAAOE,IAAI,EAAC,OAAO;IAACC,IAAI,EAAC;IAAa,EACtCH,kCAAOM,IAAI,CAAQ,CACf;AAEhB,CAAC;;;;"}